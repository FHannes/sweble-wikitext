#!/bin/bash

set -o errexit

PRJ="$1"
if [[ -z "$PRJ" ]] || [[ ! -d "$PRJ" ]]; then
  echo "Usage: $0 PROJECT"
  exit -1
fi

pushd $PRJ &>/dev/null

WDIR=$(pwd)
echo
echo "Working in: ${WDIR}"

LOG="${WDIR}/generate-example-archetype.log"
ARCHETYPE_SRC_DIR="${WDIR}/target/generated-sources/archetype-project"
ARCHETYPE_DST_DIR="${WDIR}/target/generated-sources/archetype"
ARCHETYPE_TEST_DIR="${WDIR}/target/test-archetype"

# Build example project and generate archetype
#echo "Cleaning ..."
#echo "Cleaning ..." &>> "${LOG}"
#mvn clean &>> "${LOG}"
rm -rf "$LOG" "$ARCHETYPE_SRC_DIR" "$ARCHETYPE_DST_DIR" "$ARCHETYPE_TEST_DIR"

#echo "Verifying ..."
#echo "Verifying ..." &>> "${LOG}"
#mvn verify &>> "${LOG}"
#mvn clean &>/dev/null

echo "Gathering information ..."
echo "Gathering information ..." &>> "${LOG}"
PRJ_GROUP_ID=$(mvn help:evaluate -Dexpression=project.groupId | grep -e '^[a-zA-Z_]\+\(\.[a-zA-Z_]\+\)*$' | head -n1)
PRJ_ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId | grep -e '^[a-zA-Z_-]\+$' | head -n1)
echo "Project groupId: ${PRJ_GROUP_ID}" >> "${LOG}"
echo "Project artifactId: ${PRJ_ARTIFACT_ID}" >> "${LOG}"

echo "Gathering sources ..."
echo "Gathering sources ..." &>> "${LOG}"
mkdir -p "$ARCHETYPE_SRC_DIR"
cp -a LICENSE NOTICE README pom.xml src/ "$ARCHETYPE_SRC_DIR"

echo "Generating archetype ..."
echo "Generating archetype ..." &>> "${LOG}"
pushd "$ARCHETYPE_SRC_DIR" &>/dev/null

  echo
  echo "ARCHETYPE: ${ARCHETYPE_DST_DIR}"
  echo

  mvn archetype:create-from-project &>> "${LOG}"
  mv  target/generated-sources/archetype "$ARCHETYPE_DST_DIR"

popd &>/dev/null

# Use our own, beautifully formatted pom.xml file
cp -a archetype-files/* ${ARCHETYPE_DST_DIR}/

# Don't know what we would need that for:
rm -rf ${ARCHETYPE_DST_DIR}/{src/test/,target/}

# Check contents
EXPECTED_FILES=$(cat archetype-content.txt)
ACTUAL_FILES=$(find ${ARCHETYPE_DST_DIR} | sort)
ACTUAL_FILES=${ACTUAL_FILES//$ARCHETYPE_DST_DIR/}

if [ ! "${ACTUAL_FILES}" = "${EXPECTED_FILES}" ]; then
	echo "Unexpected files in ${ARCHETYPE_DST_DIR}!"
	AF=`mktemp`
	echo "${ACTUAL_FILES}" > "${AF}"
	diff archetype-content.txt "${AF}" || true
	rm "${AF}"
	exit 1
fi

REQPROP=$(cat <<EOF
  <requiredProperties>
    <requiredProperty key="groupId">
      <defaultValue>${PRJ_GROUP_ID}</defaultValue>
    </requiredProperty>
    <requiredProperty key="artifactId">
      <defaultValue>${PRJ_ARTIFACT_ID}</defaultValue>
    </requiredProperty>
  </requiredProperties>
</archetype-descriptor>
EOF
)

METADATA="${ARCHETYPE_DST_DIR}/src/main/resources/META-INF/maven/archetype-metadata.xml"
cat "${METADATA}" | grep -v '</archetype-descriptor>' > "${METADATA}.tmp"
echo "${REQPROP}" >> "${METADATA}.tmp"
mv "${METADATA}.tmp" "${METADATA}"

# Install archetype/Update local catalog
pushd ${ARCHETYPE_DST_DIR} &> /dev/null

  echo "Installing archetype ..."
  echo "Installing archetype ..." &>> "${LOG}"

  AT_VERSION=$(mvn help:evaluate -Dexpression=project.version | grep -e '^[0-9]\+\.[0-9]\+\.[0-9]\+\(-[A-Za-z0-9_]\+\)\?$')
  AT_GROUP_ID=$(mvn help:evaluate -Dexpression=project.groupId | grep -e '^[a-zA-Z_]\+\(\.[a-zA-Z_]\+\)*$' | head -n1)
  AT_ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId | grep -e '^[a-zA-Z_-]\+$' | head -n1)

  echo "Artifact groupId: ${AT_GROUP_ID}" >> "${LOG}"
  echo "Artifact artifactId: ${AT_ARTIFACT_ID}" >> "${LOG}"
  echo "Artifact version: ${AT_VERSION}" >> "${LOG}"

  mvn install &>> "${LOG}"

  echo
  echo "JAR: ${ARCHETYPE_DST_DIR}/target/${AT_ARTIFACT_ID}-${AT_VERSION}.jar"
  echo

  echo "Generating site ..."
  echo "Generating site ..." &>> "${LOG}"

  mvn site site:stage &>> "${LOG}"

  echo
  echo "Staged SITE: ${ARCHETYPE_DST_DIR}/target/staging"
  echo

popd &> /dev/null

echo "Generating project from archetype ..."
echo "Generating project from archetype ..." &>> "${LOG}"
PROJECT=project
rm -rf ${ARCHETYPE_TEST_DIR}
mkdir ${ARCHETYPE_TEST_DIR}
pushd ${ARCHETYPE_TEST_DIR} &> /dev/null
mvn archetype:generate \
	-B \
	-DarchetypeCatalog=local \
	-DarchetypeGroupId=${AT_GROUP_ID} \
	-DarchetypeArtifactId=${AT_ARTIFACT_ID} \
	-DarchetypeVersion=${AT_VERSION} \
	-DgroupId=org.example \
	-DartifactId=${PROJECT} \
	-Dversion=1.0 &>> "${LOG}"
popd &> /dev/null

# Try to build generated project
echo "Verifying generated project ..."
echo "Verifying generated project ..." &>> "${LOG}"
pushd ${ARCHETYPE_TEST_DIR}/${PROJECT} &> /dev/null
mvn verify &>> "${LOG}"
popd &> /dev/null

# Deploy
if [[ ! -z ${DEPLOY_EXAMPLE_ARCHETYPES-} ]]; then

  pushd ${ARCHETYPE_DST_DIR} &> /dev/null

    echo "Deploying archetype ..."
    echo "Deploying archetype ..." &>> "${LOG}"

    mvn deploy $DEPLOY_EXAMPLE_ARCHETYPES &>> "${LOG}"

  popd &> /dev/null

fi

# SUCCESS!
echo "Done"
echo "Done" &>> "${LOG}"
echo

popd &>/dev/null
