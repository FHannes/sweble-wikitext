<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2011 The Open Source Research Group,
                   University of Erlangen-NÃ¼rnberg

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<xs:schema xmlns="http://sweble.org/xwml-1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://sweble.org/xwml-1.0" elementFormDefault="qualified">

  <xs:import namespace="http://www.w3.org/XML/1998/namespace"
    schemaLocation="http://www.w3.org/2001/xml.xsd" />

  <!-- ==[ XHTML Data Types ]=============================================== -->

  <xs:simpleType name="Character">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:length value="1" fixed="true" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Color">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Za-z]+|#[0-9A-Fa-f]{3}|#[0-9A-Fa-f]{6}" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LanguageCode">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:language" />
  </xs:simpleType>

  <xs:simpleType name="Length">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[-+]?(\d+|\d+(\.\d+)?%)" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LiStyle">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="Number">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:pattern value="[0-9]+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="OlStyle">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="Script">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="StyleSheet">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <!-- ==[ XHTML Data Types also used by XWML ]============================= -->

  <xs:simpleType name="Datetime">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime" />
  </xs:simpleType>

  <xs:simpleType name="Pixels">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:nonNegativeInteger" />
  </xs:simpleType>

  <xs:simpleType name="Text">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="URI">
    <xs:annotation>
      <xs:documentation>
        see
        <a href="http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">XHTML 1.0 Transitional</a>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:anyURI" />
  </xs:simpleType>

  <!-- ==[ XWML Data Types ]================================================ -->

  <xs:simpleType name="HeadingLevel">
    <xs:annotation>
      <xs:documentation>
        Designates the level of a heading from 1 (most
        important) to 6 (least
        important).
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:minInclusive value="1" />
      <xs:maxInclusive value="6" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MagicWord">
    <xs:annotation>
      <xs:documentation>The name of a MediaWiki magic word.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="Namespace">
    <xs:annotation>
      <xs:documentation>The name of a MediaWiki namespace.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="PageTitle">
    <xs:annotation>
      <xs:documentation>
        A MediaWiki page title, possibly including namespace and
        a path (of
        subpages).
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="Username">
    <xs:annotation>
      <xs:documentation>A MediaWiki username.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="Version">
    <xs:annotation>
      <xs:documentation>
        A version is given as numbers separated by dots.
        Furthermore, a version
        can have a suffix that is separated from the version number by a dash.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]+(\.[0-9]+)*(-[A-Za-z][A-Za-z0-9_]*)?" />
    </xs:restriction>
  </xs:simpleType>

  <!-- ==[ XHTML Enumerations ]============================================= -->

  <xs:simpleType name="Enum.blockAlign">
    <xs:restriction base="xs:token">
      <xs:enumeration value="center" />
      <xs:enumeration value="left" />
      <xs:enumeration value="right" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.captionAlign">
    <xs:restriction base="xs:token">
      <xs:enumeration value="bottom" />
      <xs:enumeration value="left" />
      <xs:enumeration value="right" />
      <xs:enumeration value="top" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.cellHAlign">
    <xs:restriction base="xs:token">
      <xs:enumeration value="center" />
      <xs:enumeration value="char" />
      <xs:enumeration value="justify" />
      <xs:enumeration value="left" />
      <xs:enumeration value="right" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.cellVAlign">
    <xs:restriction base="xs:token">
      <xs:enumeration value="baseline" />
      <xs:enumeration value="bottom" />
      <xs:enumeration value="middle" />
      <xs:enumeration value="top" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.clear">
    <xs:restriction base="xs:token">
      <xs:enumeration value="all" />
      <xs:enumeration value="left" />
      <xs:enumeration value="none" />
      <xs:enumeration value="right" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.compact">
    <xs:restriction base="xs:token">
      <xs:enumeration value="compact" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.dir">
    <xs:restriction base="xs:token">
      <xs:enumeration value="ltr" />
      <xs:enumeration value="rtl" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.noshade">
    <xs:restriction base="xs:token">
      <xs:enumeration value="noshade" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.nowrap">
    <xs:restriction base="xs:token">
      <xs:enumeration value="nowrap" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.scope">
    <xs:restriction base="xs:token">
      <xs:enumeration value="row" />
      <xs:enumeration value="col" />
      <xs:enumeration value="rowgroup" />
      <xs:enumeration value="colgroup" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.tableFrame">
    <xs:restriction base="xs:token">
      <xs:enumeration value="above" />
      <xs:enumeration value="below" />
      <xs:enumeration value="border" />
      <xs:enumeration value="box" />
      <xs:enumeration value="hsides" />
      <xs:enumeration value="lhs" />
      <xs:enumeration value="rhs" />
      <xs:enumeration value="void" />
      <xs:enumeration value="vsides" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.tableRules">
    <xs:restriction base="xs:token">
      <xs:enumeration value="all" />
      <xs:enumeration value="cols" />
      <xs:enumeration value="groups" />
      <xs:enumeration value="none" />
      <xs:enumeration value="rows" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.ulStyle">
    <xs:restriction base="xs:token">
      <xs:enumeration value="circle" />
      <xs:enumeration value="disc" />
      <xs:enumeration value="square" />
    </xs:restriction>
  </xs:simpleType>

  <!-- ==[ XWML Enumerations ]============================================== -->

  <xs:simpleType name="Enum.imageFormat">
    <xs:annotation>
      <xs:documentation>
        Specifies how the image will be rendered/placed.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="unrestrained" />
      <xs:enumeration value="frameless" />
      <xs:enumeration value="thumbnail" />
      <xs:enumeration value="frame" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.imageHAlign">
    <xs:annotation>
      <xs:documentation>
        Specifies how an image is aligned horizontically.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="default" />
      <xs:enumeration value="none" />
      <xs:enumeration value="left" />
      <xs:enumeration value="center" />
      <xs:enumeration value="right" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.imageVAlign">
    <xs:annotation>
      <xs:documentation>
        Specifies how an image is aligned vertically.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="baseline" />
      <xs:enumeration value="sub" />
      <xs:enumeration value="super" />
      <xs:enumeration value="top" />
      <xs:enumeration value="text-top" />
      <xs:enumeration value="middle" />
      <xs:enumeration value="bottom" />
      <xs:enumeration value="text-bottom" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.signatureFormat">
    <xs:annotation>
      <xs:documentation>
        Specifies how a signature should be rendered.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="user" />
      <xs:enumeration value="timestamp" />
      <xs:enumeration value="user-timestamp" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.border">
    <xs:restriction base="xs:token">
      <xs:enumeration value="border" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Enum.upright">
    <xs:restriction base="xs:token">
      <xs:enumeration value="upright" />
    </xs:restriction>
  </xs:simpleType>

  <!-- ===================================================================== -->

  <xs:attributeGroup name="attributes.core">
    <xs:annotation>
      <xs:documentation>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="xs:ID" />
    <xs:attribute name="class" type="xs:NMTOKENS" />
    <xs:attribute name="style" type="StyleSheet" />
    <xs:attribute name="title" type="Text" />
  </xs:attributeGroup>

  <xs:attributeGroup name="attributes.i18n">
    <xs:annotation>
      <xs:documentation>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="lang" type="LanguageCode" />
    <xs:attribute ref="xml:lang" />
    <xs:attribute name="dir" type="Enum.dir" />
  </xs:attributeGroup>

  <xs:attributeGroup name="attributes.events">
    <xs:annotation>
      <xs:documentation>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="onclick" type="Script" />
    <xs:attribute name="ondblclick" type="Script" />
    <xs:attribute name="onmousedown" type="Script" />
    <xs:attribute name="onmouseup" type="Script" />
    <xs:attribute name="onmouseover" type="Script" />
    <xs:attribute name="onmousemove" type="Script" />
    <xs:attribute name="onmouseout" type="Script" />
    <xs:attribute name="onkeypress" type="Script" />
    <xs:attribute name="onkeydown" type="Script" />
    <xs:attribute name="onkeyup" type="Script" />
  </xs:attributeGroup>

  <xs:attributeGroup name="attributes.universal">
    <xs:attributeGroup ref="attributes.core" />
    <xs:attributeGroup ref="attributes.i18n" />
    <xs:attributeGroup ref="attributes.events" />
  </xs:attributeGroup>

  <xs:attributeGroup name="attributes.textAlign">
    <xs:attribute name="align">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="left" />
          <xs:enumeration value="center" />
          <xs:enumeration value="right" />
          <xs:enumeration value="justify" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="attributes.cellHAlign">
    <xs:attribute name="align" type="Enum.cellHAlign" />
    <xs:attribute name="char" type="Character" />
    <xs:attribute name="charoff" type="Length" />
  </xs:attributeGroup>

  <xs:attributeGroup name="attributes.cellVAlign">
    <xs:attribute name="valign" type="Enum.cellVAlign" />
  </xs:attributeGroup>

  <!-- ===================================================================== -->

  <xs:group name="elements.preprocessor">
    <xs:choice>
      <xs:element ref="comment" />
      <xs:element ref="magicword" />
      <xs:element ref="param" />
      <xs:element ref="tagext" />
      <xs:element ref="transclusion" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.fontstyle.pre">
    <xs:choice>
      <xs:element ref="b" />
      <xs:element ref="i" />
      <xs:element ref="s" />
      <xs:element ref="strike" />
      <xs:element ref="tt" />
      <xs:element ref="u" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.fontstyle.extra">
    <xs:choice>
      <xs:element ref="big" />
      <xs:element ref="font" />
      <xs:element ref="small" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.fontstyle">
    <xs:choice>
      <xs:group ref="elements.inline.fontstyle.pre" />
      <xs:group ref="elements.inline.fontstyle.extra" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.phrase.pre">
    <xs:choice>
      <xs:element ref="abbr" />
      <xs:element ref="cite" />
      <xs:element ref="code" />
      <xs:element ref="dfn" />
      <xs:element ref="em" />
      <xs:element ref="kbd" />
      <xs:element ref="samp" />
      <xs:element ref="strong" />
      <xs:element ref="var" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.phrase.extra">
    <xs:choice>
      <xs:element ref="sub" />
      <xs:element ref="sup" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.phrase">
    <xs:choice>
      <xs:group ref="elements.inline.phrase.pre" />
      <xs:group ref="elements.inline.phrase.extra" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.link">
    <xs:choice>
      <xs:element ref="extlink" />
      <xs:element ref="intlink" />
      <xs:element ref="url" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.misc.pre">
    <xs:choice>
      <xs:element ref="br" />
      <xs:element ref="nowiki" />
      <xs:element ref="signature" />
      <xs:element ref="span" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.misc.extra">
    <xs:choice>
      <xs:element ref="image" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline.misc">
    <xs:choice>
      <xs:group ref="elements.inline.misc.pre" />
      <xs:group ref="elements.inline.misc.extra" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.edit">
    <xs:choice>
      <xs:element ref="del" />
      <xs:element ref="ins" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inline">
    <xs:choice>
      <xs:group ref="elements.inline.fontstyle" />
      <xs:group ref="elements.inline.phrase" />
      <xs:group ref="elements.inline.link" />
      <xs:group ref="elements.inline.misc" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.block.list">
    <xs:choice>
      <xs:element ref="dl" />
      <xs:element ref="ol" />
      <xs:element ref="ul" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.block.preformatted">
    <xs:choice>
      <xs:element ref="pre" />
      <xs:element ref="semipre" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.block.body">
    <xs:choice>
      <xs:element ref="section" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.block.misc">
    <xs:choice>
      <xs:element ref="blockquote" />
      <xs:element ref="center" />
      <xs:element ref="div" />
      <xs:element ref="hr" />
      <xs:element ref="p" />
      <xs:element ref="table" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.block">
    <xs:choice>
      <xs:group ref="elements.block.list" />
      <xs:group ref="elements.block.preformatted" />
      <xs:group ref="elements.block.misc" />
    </xs:choice>
  </xs:group>

  <xs:group name="elements.inlblk">
    <xs:choice>
      <xs:group ref="elements.preprocessor" />
      <xs:group ref="elements.edit" />
      <xs:element ref="element" />
    </xs:choice>
  </xs:group>

  <!-- ===================================================================== -->

  <xs:complexType name="Preprocessor" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="elements.preprocessor" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Inline" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="elements.inline" />
      <xs:group ref="elements.inlblk" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Inline.pre" mixed="true">
    <xs:choice>
      <xs:group ref="elements.inline.fontstyle.pre" />
      <xs:group ref="elements.inline.phrase.pre" />
      <xs:group ref="elements.inline.link" />
      <xs:group ref="elements.inline.misc.pre" />
      <xs:group ref="elements.inlblk" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Inline.title" mixed="true">
    <xs:choice>
      <xs:group ref="elements.inline.fontstyle" />
      <xs:group ref="elements.inline.phrase" />
      <xs:group ref="elements.inline.misc" />
      <xs:group ref="elements.inlblk" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Block">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="elements.block" />
      <xs:group ref="elements.inlblk" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Block.body">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="elements.block" />
      <xs:group ref="elements.block.body" />
      <xs:group ref="elements.inlblk" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Flow" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="elements.inline" />
      <xs:group ref="elements.block" />
      <xs:group ref="elements.inlblk" />
    </xs:choice>
  </xs:complexType>
  
  <!-- ===================================================================== -->

  <xs:element name="arg">
    <xs:annotation>
      <xs:documentation>
        The arg element specifies an argument to a template page. arg elements 
        are specified as part of a transclusion statement.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="name" minOccurs="0" />
        <xs:element ref="value" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="attr">
    <xs:annotation>
      <xs:documentation>
        Describes an attribute that is passed to a tag extension. Both name and
        value of the attribute are given as attributes.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="name" use="required" type="xs:Name" />
      <xs:attribute name="value" use="required" type="xs:string" />
    </xs:complexType>
  </xs:element>

  <xs:element name="body">
    <xs:annotation>
      <xs:documentation>
        General node to hold block level content in page and section nodes.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block.body" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="category">
    <xs:annotation>
      <xs:documentation>
        Puts this page into the mentioned category.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="category" use="required" type="PageTitle" />
    </xs:complexType>
  </xs:element>

  <xs:element name="comment">
    <xs:annotation>
      <xs:documentation>
        XML-like comment found in Wikitext.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="Text" />
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="default">
    <xs:annotation>
      <xs:documentation>
        Holds the default value of a template parameter. If no argument is
        specified in the transclusion statement the default value will be used
        as parameter value.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Preprocessor" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="element">
    <xs:annotation>
      <xs:documentation>
        Represents and arbitrary XML element.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="attr" minOccurs="0" maxOccurs="unbounded" />
        <xs:element ref="elembody" minOccurs="0" />
      </xs:sequence>
      <xs:attribute name="name" use="required" type="xs:Name" />
    </xs:complexType>
  </xs:element>

  <xs:element name="elembody">
    <xs:annotation>
      <xs:documentation>
        The content of an arbitrary XML tag specified by "element".
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:any minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="extlink">
    <xs:annotation>
      <xs:documentation>
        Describes a bracketed external Wikitext link.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="title" minOccurs="0" />
      </xs:sequence>
      <xs:attribute name="target" use="required" type="URI" />
    </xs:complexType>
  </xs:element>

  <xs:element name="heading">
    <xs:annotation>
      <xs:documentation>
        Holds the heading of a section.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.textAlign" />
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="image">
    <xs:annotation>
      <xs:documentation>
        Describes a Wikitext image.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="imgcaption" minOccurs="0" />
      </xs:sequence>
      <xs:attribute name="source" use="required" type="PageTitle" />
      <xs:attribute name="format" type="Enum.imageFormat" default="unrestrained" />
      <xs:attribute name="border" type="Enum.border" />
      <xs:attribute name="halign" type="Enum.imageHAlign" default="none" />
      <xs:attribute name="valign" type="Enum.imageVAlign" default="baseline" />
      <xs:attribute name="width" type="Pixels" />
      <xs:attribute name="height" type="Pixels" />
      <xs:attribute name="upright" type="Enum.upright" />
      <xs:attribute name="urllink" type="URI" />
      <xs:attribute name="pagelink" type="PageTitle" />
      <xs:attribute name="alt" type="Text" />
    </xs:complexType>
  </xs:element>

  <xs:element name="imgcaption">
    <xs:annotation>
      <xs:documentation>
        Describes the caption of an image.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Inline" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="intlink">
    <xs:annotation>
      <xs:documentation>
        Describes a internal Wikitext link.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="title" minOccurs="0" />
      </xs:sequence>
      <xs:attribute name="target" use="required" type="PageTitle" />
    </xs:complexType>
  </xs:element>

  <xs:element name="magicword">
    <xs:annotation>
      <xs:documentation>
        Descibes a magic word.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="name" use="required" type="MagicWord" />
    </xs:complexType>
  </xs:element>

  <xs:element name="name">
    <xs:annotation>
      <xs:documentation>
        Name elements specify the name of arg, param and transclusion
        elements. After expansion the content of a name element must evaluate
        to a string that forms a valid name. What constitutes a valid name
        depends on the element in which the name element occurs.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Preprocessor" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="nowiki">
    <xs:annotation>
      <xs:documentation>
        Contains text that must not be interpreted.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="Text" />
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="page">
    <xs:annotation>
      <xs:documentation>
        The root element of a page.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="redirect" minOccurs="0" />
        <xs:element ref="category" minOccurs="0" maxOccurs="unbounded" />
        <xs:element ref="body" />
      </xs:sequence>
      <xs:attribute name="version" use="required" type="Version" />
      <xs:attribute name="namespace" type="Namespace" />
      <xs:attribute name="path" type="PageTitle" />
      <xs:attribute name="title" use="required" type="PageTitle" />
    </xs:complexType>
  </xs:element>

  <xs:element name="param">
    <xs:annotation>
      <xs:documentation>
        A template parameter that will be replaced by an argument passed to the
        respective transclusion statement.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="name" />
        <xs:element ref="default" minOccurs="0" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="pre">
    <xs:annotation>
      <xs:documentation>
        Describes preformatted content that must not be parsed and will be
        displayed with a fixed font.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="Text">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attribute name="width" type="Number" />
          <xs:attribute ref="xml:space" fixed="preserve" />
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="redirect">
    <xs:annotation>
      <xs:documentation>
        Indicates that this page is a redirection page and declares the target
        page of the redirection.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="target" use="required" type="PageTitle" />
    </xs:complexType>
  </xs:element>

  <xs:element name="section">
    <xs:annotation>
      <xs:documentation>
        A section consiting of heading and body.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="heading" />
        <xs:element ref="body" />
      </xs:sequence>
      <xs:attribute name="level" use="required" type="HeadingLevel" />
    </xs:complexType>
  </xs:element>

  <xs:element name="semipre">
    <xs:annotation>
      <xs:documentation>
        Describes preformatted, parsed content that will be displayed with a
        fixed font. The semipre element must not contain the elements image,
        big, small, sub, sup or font.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline.pre" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="signature">
    <xs:annotation>
      <xs:documentation>
        Describes a signature.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="format" use="required" type="Enum.signatureFormat" />
      <xs:attribute name="author" use="required" type="Username" />
      <xs:attribute name="timestamp" use="required" type="Datetime" />
    </xs:complexType>
  </xs:element>

  <xs:element name="tagext">
    <xs:annotation>
      <xs:documentation>
        An invocation of a tag extension.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="attr" minOccurs="0" maxOccurs="unbounded" />
        <xs:element ref="tagextbody" minOccurs="0" />
      </xs:sequence>
      <xs:attribute name="name" use="required" type="xs:Name" />
    </xs:complexType>
  </xs:element>

  <xs:element name="tagextbody">
    <xs:annotation>
      <xs:documentation>
        The textual content of a tag extension.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="Text" />
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="title">
    <xs:annotation>
      <xs:documentation>
        Holds the title of an external or internal link. This element must not
        be empty or contain only whitespace. Elements from the link group must
        not appear as children of a title element.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline.title" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="transclusion">
    <xs:annotation>
      <xs:documentation>
        Transcludes another page (called template) into the page in which the
        transclusion statement appears. The template is preprocessed and
        expanded before the transclusion statement is replaced by the expanded
        textual content of the template. 
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="name" />
        <xs:element ref="arg" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="url">
    <xs:annotation>
      <xs:documentation>
        Describes a plain URL.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="target" use="required" type="URI" />
    </xs:complexType>
  </xs:element>

  <xs:element name="value">
    <xs:annotation>
      <xs:documentation>
        value elements specify the value of an arg element.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Preprocessor" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <!-- ===================================================================== -->

  <xs:element name="b">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="i">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="s">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="strike">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="tt">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="u">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="big">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="font">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.core" />
          <xs:attributeGroup ref="attributes.i18n" />
          <xs:attribute name="color" type="Color" />
          <xs:attribute name="face" />
          <xs:attribute name="size" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="small">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="abbr">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="cite">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="code">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="dfn">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="em">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="kbd">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="samp">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="strong">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="var">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="sub">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="sup">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="br">
    <xs:complexType>
      <xs:attributeGroup ref="attributes.core" />
      <xs:attribute name="clear" type="Enum.clear" default="none" />
    </xs:complexType>
  </xs:element>

  <xs:element name="span">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="del">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Flow">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attribute name="cite" type="URI" />
          <xs:attribute name="datetime" type="Datetime" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="ins">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Flow">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attribute name="cite" type="URI" />
          <xs:attribute name="datetime" type="Datetime" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="dl">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:group ref="elements.preprocessor" />
        <xs:element ref="dt" />
        <xs:element ref="dd" />
      </xs:choice>
      <xs:attributeGroup ref="attributes.universal" />
      <xs:attribute name="compact">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="compact" />
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="dt">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="dd">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="ol">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="elements.preprocessor" />
        <xs:element ref="li" maxOccurs="unbounded" />
      </xs:sequence>
      <xs:attributeGroup ref="attributes.universal" />
      <xs:attribute name="compact" type="Enum.compact" />
      <xs:attribute name="start" type="Number" />
      <xs:attribute name="type" type="OlStyle" />
    </xs:complexType>
  </xs:element>

  <xs:element name="ul">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="elements.preprocessor" />
        <xs:element ref="li" maxOccurs="unbounded" />
      </xs:sequence>
      <xs:attributeGroup ref="attributes.universal" />
      <xs:attribute name="compact" type="Enum.compact" />
      <xs:attribute name="type" type="Enum.ulStyle" />
    </xs:complexType>
  </xs:element>

  <xs:element name="li">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attribute name="type" type="LiStyle" />
          <xs:attribute name="value" type="Number" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="blockquote">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attribute name="cite" type="URI" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="center">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block">
          <xs:attributeGroup ref="attributes.universal" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="div">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Flow">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attributeGroup ref="attributes.textAlign" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="hr">
    <xs:complexType>
      <xs:attributeGroup ref="attributes.universal" />
      <xs:attribute name="align" type="Enum.blockAlign" />
      <xs:attribute name="noshade" type="Enum.noshade" />
      <xs:attribute name="size" type="Pixels" />
      <xs:attribute name="width" type="Length" />
    </xs:complexType>
  </xs:element>

  <xs:element name="p">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attributeGroup ref="attributes.textAlign" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="table">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:group ref="elements.preprocessor" />
          <xs:element ref="caption" />
        </xs:choice>
        <xs:choice>
          <xs:group ref="elements.preprocessor" />
          <xs:element ref="tbody" />
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="attributes.universal" />
      <xs:attribute name="summary" type="Text" />
      <xs:attribute name="width" type="Length" />
      <xs:attribute name="border" type="Pixels" />
      <xs:attribute name="frame" type="Enum.tableFrame" />
      <xs:attribute name="rules" type="Enum.tableRules" />
      <xs:attribute name="cellspacing" type="Length" />
      <xs:attribute name="cellpadding" type="Length" />
      <xs:attribute name="align" type="Enum.blockAlign" />
      <xs:attribute name="bgcolor" type="Color" />
    </xs:complexType>
  </xs:element>

  <xs:element name="caption">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Inline">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attribute name="align" type="Enum.captionAlign" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="tbody">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tr" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="tr">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:group ref="elements.preprocessor" />
        <xs:element ref="th" />
        <xs:element ref="td" />
      </xs:choice>
      <xs:attributeGroup ref="attributes.universal" />
      <xs:attributeGroup ref="attributes.cellHAlign" />
      <xs:attributeGroup ref="attributes.cellVAlign" />
      <xs:attribute name="bgcolor" type="Color" />
    </xs:complexType>
  </xs:element>

  <xs:element name="th">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attributeGroup ref="attributes.cellHAlign" />
          <xs:attributeGroup ref="attributes.cellVAlign" />
          <xs:attribute name="abbr" type="Text" />
          <xs:attribute name="axis" />
          <xs:attribute name="bgcolor" type="Color" />
          <xs:attribute name="colspan" default="1" type="Number" />
          <xs:attribute name="headers" type="xs:IDREFS" />
          <xs:attribute name="height" type="Length" />
          <xs:attribute name="nowrap" type="Enum.nowrap" />
          <xs:attribute name="rowspan" default="1" type="Number" />
          <xs:attribute name="scope" type="Enum.scope" />
          <xs:attribute name="width" type="Length" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="td">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block">
          <xs:attributeGroup ref="attributes.universal" />
          <xs:attributeGroup ref="attributes.cellHAlign" />
          <xs:attributeGroup ref="attributes.cellVAlign" />
          <xs:attribute name="abbr" type="Text" />
          <xs:attribute name="axis" />
          <xs:attribute name="bgcolor" type="Color" />
          <xs:attribute name="colspan" default="1" type="Number" />
          <xs:attribute name="headers" type="xs:IDREFS" />
          <xs:attribute name="height" type="Length" />
          <xs:attribute name="nowrap" type="Enum.nowrap" />
          <xs:attribute name="rowspan" default="1" type="Number" />
          <xs:attribute name="scope" type="Enum.scope" />
          <xs:attribute name="width" type="Length" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

</xs:schema>
