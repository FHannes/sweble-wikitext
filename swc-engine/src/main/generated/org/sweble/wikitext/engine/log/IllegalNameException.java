/* 
 * This file is auto-generated.
 * DO NOT MODIFY MANUALLY!
 * 
 * Generated by AstNodeGenerator.
 * Last generated: 2012-10-02 10:53:34.
 */

package org.sweble.wikitext.engine.log;

import org.sweble.wikitext.parser.nodes.WikitextNode;
import org.sweble.wikitext.parser.nodes.WtInnerNode1;
import org.sweble.wikitext.parser.nodes.WtList;

import de.fau.cs.osr.ptk.common.ast.AstNodePropertyIterator;

/**
 * <h1>Illegal Name Exception</h1>
 */
public class IllegalNameException
		extends
			WtInnerNode1

{
	private static final long serialVersionUID = 1L;
	
	// =========================================================================
	
	public IllegalNameException()
	{
		super(new WtList());
		
	}
	
	public IllegalNameException(WikitextNode name, String message)
	{
		super(name);
		setMessage(message);
		
	}
	
	// =========================================================================
	// Properties
	
	private String message;
	
	public final String getMessage()
	{
		return this.message;
	}
	
	public final String setMessage(String message)
	{
		String old = this.message;
		this.message = message;
		return old;
	}
	
	@Override
	public final int getPropertyCount()
	{
		return 1;
	}
	
	@Override
	public final AstNodePropertyIterator propertyIterator()
	{
		return new AstNodePropertyIterator()
		{
			@Override
			protected int getPropertyCount()
			{
				return 1;
			}
			
			@Override
			protected String getName(int index)
			{
				switch (index)
				{
					case 0:
						return "message";
						
					default:
						throw new IndexOutOfBoundsException();
				}
			}
			
			@Override
			protected Object getValue(int index)
			{
				switch (index)
				{
					case 0:
						return IllegalNameException.this.getMessage();
						
					default:
						throw new IndexOutOfBoundsException();
				}
			}
			
			@Override
			protected Object setValue(int index, Object value)
			{
				switch (index)
				{
					case 0:
						return IllegalNameException.this.setMessage((String) value);
						
					default:
						throw new IndexOutOfBoundsException();
				}
			}
		};
	}
	
	// =========================================================================
	// Children
	
	public final void setName(WikitextNode name)
	{
		set(0, name);
	}
	
	public final WikitextNode getName()
	{
		return (WikitextNode) get(0);
	}
	
	private static final String[] CHILD_NAMES = new String[] { "name" };
	
	public final String[] getChildNames()
	{
		return CHILD_NAMES;
	}
	
	// =========================================================================
	
}
