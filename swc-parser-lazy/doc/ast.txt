
==[ How to read this document ]=================================================

There are multiple sections which contain brief descriptions of the AST nodes 
that belong to the same category of nodes.

Sometimes a tag in brackets follows the "AST node:" header (eg. [ABSTRACT]).
Here's the meaning of those tags:

  [ABSTRACT]: This is not a real AST node but an abstract Java class from which
    real AST nodes inherit. All abstract nodes are found in the "Special"
    section.

  [INTERMEDIATE]: These nodes are put into the AST by the preprocessor or the 
    parser and will usually disappear after subsequent parsing stages. They 
    help to transport information between parser stages.

  [ERROR]: These nodes indicates faulty syntax if they remain in the AST. Often 
    these nodes are also intermediate nodes. The XmlElementOpen and 
    XmlElementClose nodes for example: They are produced by the parser and will 
    be melted into XmlElement ndoes by the postprocessor if the postprocessor 
    can find matching pairs (and if the kind of XML element is actually 
    allowed). If not, both or one of the XmlElement{Open,Close} elements will 
    remain in the AST and indicate a problem.

Some important nodes:

  AstNode: The father of all nodes.
  
  InnerNode: The father of all inner nodes.
  
  LeafNode: The father of all leaf nodes.
  
  ContentNode: The father of all nodes that contain content in the form of 
    other AST nodes.

  StringContentNode: The father of all nodes that contain pure string content.

  TextNode: A node to represent plain text.

  NodeList: The only node that has variable number of children.



==[ Special ]===================================================================

 *   AST node: [ABSTRACT]
       Name        : AstNode

 *   AST node: [ABSTRACT]
       Name        : InnerNode
       Extends     : AstNode

 *   AST node: [ABSTRACT]
       Name        : InnerNode[1-4]
       Extends     : InnerNode

 *   AST node: [ABSTRACT]
       Name        : LeafNode
       Extends     : AstNode

 *   AST node: [ABSTRACT]
       Name        : ContentNode
       Extends     : InnerNode1
       Constructor : content

       Children:
         content : NodeList

 *   AST node: [ABSTRACT]
       Name        : StringContentNode 
       Extends     : LeafNode
       NodeType    : de.fau.cs.osr.ptk.common.ast.AstNode.NT_TEXT
       Constructor : content

       Properties:
         content : String

 *   AST node:
       Name        : NodeList
       Extends     : InnerNode 
       NodeType    : de.fau.cs.osr.ptk.common.ast.AstNode.NT_NODE_LIST

 *   AST node:
       Name        : Text
       Extends     : StringContentNode
       NodeType    : de.fau.cs.osr.ptk.common.ast.AstNode.NT_TEXT
       Constructor : content

 *   AST node: [INTERMEDIATE]
       Name        : ParserEntity
       Extends     : LeafNode
       NodeType    : de.fau.cs.osr.ptk.common.ast.AstNode.NT_PARSER_ENTITY
       Constructor : id

       Properties:
         id : int



==[ Document ]==================================================================

 *   AST node:
       Name        : LazyPreprocessedPage
       Extends     : ContentNode
       Constructor : "content, warnings"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LAZY_PREPROCESSED_PAGE

       Properties:
         warnings : List<Warning>

 *   AST node:
       Name        : LazyParsedPage
       Extends     : ContentNode
       Constructor : "content, warnings"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LAZY_PARSED_PAGE

       Properties:
         warnings : List<Warning>



==[ Encoding Validation ]=======================================================

 *   AST node:
       Name        : IllegalCodePoint
       Extends     : LeafNode
       Constructor : "codePoint, type"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_ILLEGAL_CODE_POINT

       Properties:
         codePoint : String
         type      : IllegalCodePointType



==[ Preprocessor ]==============================================================

 *   AST node:
       Name        : MagicWord
       Extends     : LeafNode
       Constructor : word
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_MAGIC_WORD

       Properties:
         word : String

 *   AST node:
       Name        : Redirect
       Extends     : LeafNode
       Constructor : target
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_REDIRECT

       Properties:
         target : String

 *   AST node:
       Name        : TagExtension
       Extends     : InnerNode.InnerNode1
       Constructor : "name, xmlAttributes, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TAG_EXTENSION

       Properties:
         name : String
         body : String

       Children:
         xmlAttributes : NodeList

 *   AST node:
       Name        : Template
       Extends     : InnerNode.InnerNode2
       Constructor : "name, args"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TEMPLATE

       Children:
         name : NodeList
         args : NodeList

 *   AST node:
       Name        : TemplateParameter
       Extends     : InnerNode.InnerNode3
       Constructor : "name, defaultValue, garbage"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TEMPLATE_PARAMETER

       Children:
         name         : NodeList
         defaultValue : TemplateArgument
         garbage      : NodeList

 *   AST node:
       Name        : TemplateArgument
       Extends     : InnerNode.InnerNode2
       Constructor : "value, hasName"
       Constructor : "name, value, hasName"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TEMPLATE_ARGUMENT

       Properties:
         hasName : boolean

       Children:
         name  : NodeList
         value : NodeList

 *   AST node: [INTERMEDIATE NODE]
       Name        : OnlyInclude
       Extends     : ContentNode
       Constructor : "content, elementType"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_ONLY_INCLUDE

       Properties:
         elementType : XmlElementType

 *   AST node: [INTERMEDIATE NODE]
       Name        : Ignored
       Extends     : StringContentNode
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_IGNORED
       Constructor : content



==[ Text ]======================================================================

 *   AST node:
       Name        : Whitespace
       Extends     : ContentNode
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_WHITESPACE
       Constructor : "content, hasNewline"

       Properties:
         hasNewline : boolean



==[ Inline formatting ]=========================================================

 *   AST node:
       Name        : Bold
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_BOLD

 *   AST node:
       Name        : Italics
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_ITALICS

 *   AST node: [INTERMEDIATE NODE]
       Name        : Ticks
       Extends     : LeafNode
       Constructor : tickCount
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TICKS

       Properties:
         tickCount : int



==[ Signature ]=================================================================

 *   AST node:
       Name        : Signature
       Extends     : LeafNode
       Constructor : tildeCount
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_SIGNATURE

       Properties:
         tildeCount : int



==[ Links and Images ]==========================================================

 *   AST node:
       Name        : Url
       Extends     : LeafNode
       Constructor : "protocol, path"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_URL

       Properties:
         protocol : String
         path     : String

 *   AST node:
       Name        : ExternalLink
       Extends     : InnerNode.InnerNode2
       Constructor : "target"
       Constructor : "target, title"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_EXTERNAL_LINK

       Children:
         target : Url
         title  : NodeList

 *   AST node:
       Name        : InternalLink
       Extends     : InnerNode.InnerNode1
       Implements  : Cloneable
       Constructor : "prefix, target, title, postfix"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_INTERNAL_LINK

       Children:
         title : LinkTitle

       Properties:
         target    : String
         prefix    : String
         postfix   : String

 *   AST node:
       Name        : ImageLink
       Extends     : InnerNode.InnerNode2
       Constructor : "target, options, title, format, border, hAlign, vAlign, width, height, upright, linkPage, linkUrl, alt"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_IMAGE_LINK

       Children:
         options : NodeList
         title   : LinkTitle

       Properties:
         target   : String
         width    : int
         height   : int
         upright  : boolean
         hAlign   : ImageHorizAlign
         vAlign   : ImageVertAlign
         format   : ImageViewFormat
         border   : boolean
         linkPage : String
         linkUrl  : Url
         alt      : LinkOptionAltText

 *   AST node:
       Name        : LinkTitle
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LINK_TITLE

 *   AST node: [INTERMEDIATE/ERROR NODE]
       Name        : LinkOptionGarbage
       Extends     : StringContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LINK_OPTION_GARBAGE

 *   AST node: [INTERMEDIATE NODE]
       Name        : LinkTarget
       Extends     : StringContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LINK_TARGET

 *   AST node: [INTERMEDIATE NODE]
       Name        : LinkOptionResize
       Extends     : LeafNode
       Constructor : "width, height"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LINK_OPTION_RESIZE

       Properties:
         width        : int
         height       : int

 *   AST node: [INTERMEDIATE NODE]
       Name        : LinkOptionKeyword
       Extends     : LeafNode
       Constructor : "keyword"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LINK_OPTION_KEYWORD

       Properties:
         keyword : String

 *   AST node: [INTERMEDIATE NODE]
       Name        : LinkOptionLinkTarget
       Extends     : InnerNode.InnerNode1
       Constructor : target
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LINK_OPTION_LINK_TARGET

       Children:
         target : AstNode

 *   AST node: [INTERMEDIATE NODE]
       Name        : LinkOptionAltText
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_LINK_OPTION_ALT_TEXT



==[ Section ]===================================================================

 *   AST node:
       Name        : Section
       Extends     : InnerNode.InnerNode2
       Constructor : "level, title, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_SECTION

       Properties:
         level   : int

       Children:
         title : NodeList
         body  : NodeList

 *   AST node: [INTERMEDIATE NODE]
       Name        : Heading
       Extends     : ContentNode
       Constructor : "content, level"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_HEADING

       Properties:
         level : int



==[ Paragraph ]=================================================================

 *   AST node:
       Name        : Paragraph
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_PARAGRAPH



==[ Horizontal Rule ]===========================================================

 *   AST node:
       Name        : HorizontalRule
       Extends     : LeafNode
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_HORIZONTAL_RULE



==[ Preformatted ]==============================================================

 *   AST node:
       Name        : SemiPre
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_SEMI_PRE

 *   AST node:
       Name        : SemiPreLine
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_SEMI_PRE_LINE



==[ Lists ]=====================================================================

 *   AST node:
       Name        : Enumeration
       Extends     : ContentNode
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_ENUMERATION

 *   AST node:
       Name        : EnumerationItem
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_ENUMERATION_ITEM

 *   AST node:
       Name        : Itemization
       Extends     : ContentNode
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_ITEMIZATION

 *   AST node:
       Name        : ItemizationItem
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_ITEMIZATION_ITEM

 *   AST node:
       Name        : DefinitionList
       Extends     : ContentNode
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_DEFINITION_LIST

 *   AST node:
       Name        : DefinitionTerm
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_DEFINITION_TERM

 *   AST node:
       Name        : DefinitionDefinition
       Extends     : ContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_DEFINITION_DEFINITION

 *   AST node: [INTERMEDIATE NODE]
       Name        : RawListItem
       Extends     : ContentNode
       Constructor : "content, rt0, rt1, prefix"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_RAW_LIST_ITEM

       Properties:
         rt0     : String
         rt1     : AstNode
         prefix  : String



==[ Tables ]====================================================================

 *   AST node:
       Name        : Table
       Extends     : InnerNode.InnerNode2
       Constructor : "xmlAttributes, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TABLE

       Children:
         xmlAttributes : NodeList
         body          : NodeList

 *   AST node:
       Name        : TableCaption
       Extends     : InnerNode.InnerNode2
       Constructor : "xmlAttributes, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TABLE_CAPTION

       Children:
         xmlAttributes : NodeList
         body          : NodeList

 *   AST node:
       Name        : TableRow
       Extends     : InnerNode.InnerNode2
       Constructor : "xmlAttributes, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TABLE_ROW

       Children:
         xmlAttributes : NodeList
         body          : NodeList

 *   AST node:
       Name        : TableHeader
       Extends     : InnerNode.InnerNode2
       Constructor : "xmlAttributes, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TABLE_HEADER

       Children:
         xmlAttributes : NodeList
         body          : NodeList

 *   AST node:
       Name        : TableCell
       Extends     : InnerNode.InnerNode2
       Constructor : "xmlAttributes, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_TABLE_CELL

       Children:
         xmlAttributes : NodeList
         body          : NodeList



==[ HTML ]======================================================================

 *   AST node:
       Name        : XmlElement
       Extends     : InnerNode.InnerNode2
       Implements  : NamedXmlElement
       Constructor : "name, empty, xmlAttributes, body"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_ELEMENT

       Properties:
         name  : String
         empty : Boolean

       Children:
         xmlAttributes : NodeList
         body          : NodeList

 *   AST node:
       Name        : XmlAttribute
       Extends     : InnerNode.InnerNode1
       Constructor : "name, hasValue"
       Constructor : "name, value, hasValue"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_ATTRIBUTE

       Properties:
         name     : String
         hasValue : boolean

       Children:
         value : NodeList

 *   AST node:
       Name        : XmlCharRef
       Extends     : LeafNode
       Constructor : codePoint
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_CHAR_REF

       Properties:
         codePoint : int

 *   AST node:
       Name        : XmlEntityRef
       Extends     : LeafNode
       Constructor : name
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_ENTITY_REF

       Properties:
         name : String

 *   AST node:
       Name        : XmlComment
       Extends     : StringContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_COMMENT

 *   AST node: [INTERMEDIATE/ERROR NODE]
       Name        : XmlAttributeGarbage
       Extends     : StringContentNode
       Constructor : content
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_ATTRIBUTE_GARBAGE

 *   AST node: [INTERMEDIATE/ERROR NODE]
       Name        : XmlElementOpen
       Extends     : InnerNode.InnerNode1
       Implements  : NamedXmlElement
       Constructor : "name, xmlAttributes"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_TAG_OPEN

       Properties:
         name : String

       Children:
         xmlAttributes : NodeList

 *   AST node: [INTERMEDIATE/ERROR NODE]
       Name        : XmlElementClose
       Extends     : LeafNode
       Implements  : NamedXmlElement
       Constructor : "name"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_TAG_CLOSE

       Properties:
         name : String

 *   AST node: [INTERMEDIATE/ERROR NODE]
       Name        : XmlElementEmpty
       Extends     : InnerNode.InnerNode1
       Implements  : NamedXmlElement
       Constructor : "name, xmlAttributes"
       NodeType    : org.sweble.wikitext.lazy.AstNodeTypes.NT_XML_TAG_EMPTY

       Properties:
         name : String

       Children:
         xmlAttributes : NodeList
