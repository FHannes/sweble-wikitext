/**
 * Copyright 2011 The Open Source Research Group,
 *                University of Erlangen-NÃ¼rnberg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * XML Attribute
 * -------------
 *
 *   Grammar:
 *     - Ws* XmlName Ws* '=' Ws* '\'' AttributeValueSq* '\''
 *     - Ws* XmlName Ws* '=' Ws* '"' ValueDqStar '"'
 *     - Ws* XmlName Ws* '=' ValueNqStar
 *     - Ws* XmlName
 *
 */

module org.sweble.wikitext.parser.utils.XmlAttribute(WS);

import org.sweble.wikitext.parser.utils.XmlName;
import org.sweble.wikitext.parser.utils.XmlReference;
import WS;





// -- Attributes ---------------------------------------------------------------

WtXmlAttributes XmlAttributeStar =
  yyValue:tXmlAttributePlus?
  {
    if (yyValue == null)
      yyValue = WtXmlAttributes.EMPTY;
  }
;

WtXmlAttributes XmlAttributePlus = tXmlAttributePlus ;

inline void XmlAttrGarbageStopper =
    <SlashGreater> "/>"
  / <Greater>      '>'
  / <Less>         '<'
;

inline void XmlAttrValueStopper =
    <SlashGreater> "/>"
  / <Greater>      '>'
  / <Less>         '<'
;

inline String XmlAttrWs =
    <Whitespace>   pWsPlus
;




// -- Attributes ---------------------------------------------------------------

private transient WtXmlAttributes tXmlAttributePlus =
  head:XmlHeadAttributeChoice tail:XmlTailAttributeChoice*
  {
    yyValue = new WtXmlAttributesImpl(new WtNodeListImpl(head, tail));
  }
;

private inline WtNode XmlHeadAttributeChoice =
    ValidXmlAttribute
  / XmlAttributeGarbage
;

private inline WtNode XmlTailAttributeChoice =
    &XmlAttrWs ValidXmlAttribute
  / XmlAttributeGarbage
;

private inline WtXmlAttributeGarbage XmlAttributeGarbage =
  garbage:GarbageString
  {
    yyValue = new WtXmlAttributeGarbage(garbage);
  }
;

private transient String GarbageString =
  ( !GarbageStringStopper _ )+
;

private inline void GarbageStringStopper =
    XmlAttrWs? XmlAttrGarbageStopper
  / XmlAttrWs ValidXmlAttribute
;

private WtXmlAttribute ValidXmlAttribute =
    ws0:XmlAttrWs? name:XmlName ws1:XmlAttrWs? '=' ws2:XmlAttrWs? ['] value:ValueSqStar ['] &AttrEnd
    {
      yyValue = setRtd(new WtXmlAttribute(name, value), ws0, name, ws1, '=', ws2, '\'', SEP, '\'');
    }
  / ws0:XmlAttrWs? name:XmlName ws1:XmlAttrWs? '=' ws2:XmlAttrWs? '"' value:ValueDqStar '"' &AttrEnd
    {
      yyValue = setRtd(new WtXmlAttribute(name, value), ws0, name, ws1, '=', ws2, '"', SEP, '"');
    }
  / ws0:XmlAttrWs? name:XmlName ws1:XmlAttrWs? '=' value:ValueNqStar &AttrEnd
    {
      yyValue = setRtd(new WtXmlAttribute(name, value), ws0, name, ws1, '=', SEP);
    }
  / ws0:XmlAttrWs? name:XmlName &AttrEnd
    {
      yyValue = setRtd(new WtXmlAttribute(name), ws0, name, SEP);
    }
;

private inline void AttrEnd =
    XmlAttrWs
  / XmlAttrValueStopper
  / Eof
;




// -- Single quoted attribute values -------------------------------------------

private transient WtValue ValueSqStar =
  value:ValueSqChoice*
  {
    yyValue = new WtValueImpl(new WtNodeListImpl(value));
  }
;

private inline WtNode ValueSqChoice =
    string:ValueSqString
    {
      yyValue = new WtText(string);
    }
  / &'&' XmlReference
;

private transient String ValueSqString =
  ( !XmlAttrValueStopper ![<'&] _ )+
;




// -- Double quoted attribute values -------------------------------------------

private transient WtValue ValueDqStar =
  value:ValueDqChoice*
  {
    yyValue = new WtValueImpl(new WtNodeListImpl(value));
  }
;

private inline WtNode ValueDqChoice =
    string:ValueDqString
    {
      yyValue = new WtText(string);
    }
  / &'&' XmlReference
;

private transient String ValueDqString =
  ( !XmlAttrValueStopper ![<"&] _ )+
;




// -- Non-quoted attribute values ----------------------------------------------

private transient WtValue ValueNqStar =
  value:ValueNqChoice*
  {
    yyValue = new WtValueImpl(new WtNodeListImpl(value));
  }
;

private inline WtNode ValueNqChoice =
    string:ValueNqString
    {
      yyValue = new WtText(string);
    }
  / &'&' XmlReference
;

private transient String ValueNqString =
  ( !XmlAttrValueStopper [a-zA-Z0-9!#$%()*,\-./:;<?@[\]^_`{|}~] )+
;




// -- End of file -------------------------------------------------------------
