
'package java.util
'	interface List<T> {
'	}
'	abstract class AbstractList<T> {
'	}
'end package

'package java.io
'	interface Serializable {
'	}
'end package

'package java.lang
'	interface Cloneable {
'	}
'end package

'package xtc.tree
'	interface Locatable {
'	}
'end package

package de.fau.cs.osr.ptk.common

	abstract class AstAbstractInnerNode<T> {
		-long serialVersionUID
		#AstAbstractInnerNode()
		#AstAbstractInnerNode(Location arg0)
		+S get(int index, Class<S> clazz)
		+String[] getChildNames()
		+void toString(Appendable out)
	}
	
	abstract class AstInnerNode1<T> {
		-long serialVersionUID
		-T n0
		#AstInnerNode1(Uninitialized u)
		#AstInnerNode1(Location arg0)
		#AstInnerNode1(T n0)
		#AstInnerNode1(Location arg0, T n0)
		+int size()
		+T get(int index)
		+T set(int index, T n)
		+T remove(int index)
	}
	
	abstract class AstInnerNode2<T> {
		-long serialVersionUID
		-T n0
		-T n1
		#AstInnerNode2(Uninitialized u)
		#AstInnerNode2(Location arg0)
		#AstInnerNode2(T n0, T n1)
		#AstInnerNode2(Location arg0, T n0, T n1)
		+int size()
		+T get(int index)
		+T set(int index, T n)
		+T remove(int index)
	}
	
	abstract class AstInnerNode3<T> {
		-long serialVersionUID
		-T n0
		-T n1
		-T n2
		#AstInnerNode3(Uninitialized u)
		#AstInnerNode3(Location arg0)
		#AstInnerNode3(T n0, T n1, T n2)
		#AstInnerNode3(Location arg0, T n0, T n1, T n2)
		+int size()
		+T get(int index)
		+T set(int index, T n)
		+T remove(int index)
	}
	
	abstract class AstInnerNode4<T> {
		-long serialVersionUID
		-T n0
		-T n1
		-T n2
		-T n3
		#AstInnerNode4(Uninitialized u)
		#AstInnerNode4(Location arg0)
		#AstInnerNode4(T n0, T n1, T n2, T n3)
		#AstInnerNode4(Location arg0, T n0, T n1, T n2, T n3)
		+int size()
		+T get(int index)
		+T set(int index, T n)
		+T remove(int index)
	}
	
	interface AstInnerNode<T> {
	}
	
	interface AstLeafNode<T> {
	}
	
	abstract class AstLeafNodeImpl<T> {
		-long serialVersionUID
		#AstLeafNodeImpl()
		#AstLeafNodeImpl(Location arg0)
		+int size()
		+String[] getChildNames()
		+void toString(Appendable out)
	}
	
	interface AstNode<T> {
		int NT_CUSTOM_BIT
		int NT_UNTYPED
		int NT_NODE_LIST
		int NT_PARSER_ENTITY
		int NT_TUPLE_1
		int NT_TUPLE_2
		int NT_TUPLE_3
		int NT_TUPLE_4
		int NT_TUPLE_5
		int NT_TEXT
		String[] EMPTY_CHILD_NAMES
		int getNodeType()
		boolean isNodeType(int testType)
		String getNodeTypeName()
		String getNodeName()
		AstLocation getNativeLocation()
		void setNativeLocation(AstLocation location)
		boolean addAll(Pair<? extends T> p)
		S get(int index, Class<S> clazz)
		boolean isList()
		String[] getChildNames()
		void toString(Appendable out)
		boolean equals(Object obj)
		Object clone()
		AstNode<T> cloneWrapException()
		AstNode<T> deepClone()
		AstNode<T> deepCloneWrapException()
	}
	
	interface AstNodeAttributeInterface {
		boolean hasAttributes()
		Map<String,Object> getAttributes()
		void setAttributes(Map<String,Object> attrs)
		void clearAttributes()
		boolean hasAttribute(String name)
		Object getAttribute(String name)
		Object setAttribute(String name, Object value)
		Object removeAttribute(String name)
		int getIntAttribute(String name)
		Integer setIntAttribute(String name, Integer value)
		boolean getBooleanAttribute(String name)
		boolean setBooleanAttribute(String name, boolean value)
		String getStringAttribute(String name)
		String setStringAttribute(String name, String value)
	}
	
	abstract class AstNodeImpl<T> {
		-long serialVersionUID
		-HashMap<String,Object> attributes
		-AstLocation location
		#AstNodeImpl()
		#AstNodeImpl(AstLocation location)
		#AstNodeImpl(Location location)
		+int getNodeType()
		+boolean isNodeType(int testType)
		+String getNodeTypeName()
		+String getNodeName()
		+boolean hasAttributes()
		+Map<String,Object> getAttributes()
		+void setAttributes(Map<String,Object> attrs)
		+void clearAttributes()
		+boolean hasAttribute(String name)
		+Object getAttribute(String name)
		+Object setAttribute(String name, Object value)
		+Object removeAttribute(String name)
		+int getIntAttribute(String name)
		+Integer setIntAttribute(String name, Integer value)
		+boolean getBooleanAttribute(String name)
		+boolean setBooleanAttribute(String name, boolean value)
		+String getStringAttribute(String name)
		+String setStringAttribute(String name, String value)
		+boolean hasProperties()
		+int getPropertyCount()
		+Object getProperty(String name)
		+Object getProperty(String name, Object default_)
		+boolean hasProperty(String name)
		+Object setProperty(String name, Object value)
		+AstNodePropertyIterator propertyIterator()
		+boolean hasLocation()
		+Location getLocation()
		+void setLocation(Location location)
		+void setLocation(Locatable locatable)
		+AstLocation getNativeLocation()
		+void setNativeLocation(AstLocation location)
		+int size()
		+T get(int index)
		+S get(int index, Class<S> clazz)
		+boolean addAll(Pair<? extends T> p)
		+boolean isList()
		+String[] getChildNames()
		+void toString(Appendable out)
		+String toString()
		+Object clone()
		+AstNodeImpl<T> cloneWrapException()
		+AstNodeImpl<T> deepClone()
		+AstNodeImpl<T> deepCloneWrapException()
		+boolean equals(Object obj)
	}
	
	interface AstNodeList<T> {
		void exchange(AstNodeList<T> other)
	}
	
	class AstNodeListImpl<T> {
		-long serialVersionUID
		-LinkedList<T> children
		+AstNodeListImpl()
		+AstNodeListImpl(T child)
		+AstNodeListImpl(T car, Pair<? extends T> cdr)
		+AstNodeListImpl(T a, T b)
		+AstNodeListImpl(T a, T b, T c)
		+AstNodeListImpl(T a, T b, T c, T d)
		+AstNodeListImpl(Pair<? extends T> list)
		+AstNodeListImpl(Collection<? extends T> list)
		+AstNodeListImpl(T[] children)
		+int getNodeType()
		+int size()
		+boolean isEmpty()
		+boolean contains(Object o)
		+Iterator<T> iterator()
		+Object[] toArray()
		+S[] toArray(S[] a)
		+boolean add(T e)
		+boolean remove(Object o)
		+boolean containsAll(Collection<?> c)
		+boolean addAll(Collection<? extends T> c)
		+boolean addAll(int index, Collection<? extends T> c)
		+boolean removeAll(Collection<?> c)
		+boolean retainAll(Collection<?> c)
		+void clear()
		+T get(int index)
		+T set(int index, T value)
		+void add(int index, T element)
		+T remove(int index)
		+int indexOf(Object o)
		+int lastIndexOf(Object o)
		+ListIterator<T> listIterator()
		+ListIterator<T> listIterator(int index)
		+List<T> subList(int fromIndex, int toIndex)
		+boolean addAll(Pair<? extends T> p)
		+boolean isList()
		+String[] getChildNames()
		+void toString(Appendable out)
		+void exchange(AstNodeList<T> other)
	}
	
	interface AstNodePropertyInterface {
		boolean hasProperties()
		int getPropertyCount()
		Object getProperty(String name)
		Object getProperty(String name, Object default_)
		boolean hasProperty(String name)
		Object setProperty(String name, Object value)
		AstNodePropertyIterator propertyIterator()
	}
	
	class AstParserEntity<T> {
		-long serialVersionUID
		-int id
		#AstParserEntity(Uninitialized u)
		+AstParserEntity(int id)
		+int getId()
		+int setId(int id)
		+int getPropertyCount()
		+AstNodePropertyIterator propertyIterator()
		+int getNodeType()
		+void toString(Appendable out)
	}
	
	interface AstStringNode<T> {
		String getContent()
		String setContent(String content)
	}
	
	abstract class AstStringNodeImpl<T> {
		-long serialVersionUID
		-String content
		#AstStringNodeImpl(Uninitialized u)
		#AstStringNodeImpl(String content)
		+String getContent()
		+String setContent(String content)
		+int getPropertyCount()
		+AstNodePropertyIterator propertyIterator()
		+void toString(Appendable out)
	}
	
	class AstText<T> {
		-long serialVersionUID
		#AstText(Uninitialized u)
		+AstText(String content)
		+int getNodeType()
	}
	
	AstNodeImpl <|-- AstAbstractInnerNode
	
	AstInnerNode <|.. AstAbstractInnerNode
	
	AstAbstractInnerNode <|-- AstInnerNode1
	
	AstAbstractInnerNode <|-- AstInnerNode2
	
	AstAbstractInnerNode <|-- AstInnerNode3
	
	AstAbstractInnerNode <|-- AstInnerNode4
	
	AstNode <|.. AstInnerNode
	
	AstNode <|.. AstLeafNode
	
	AstNodeImpl <|-- AstLeafNodeImpl
	
	AstLeafNode <|.. AstLeafNodeImpl
	
	AstNodeAttributeInterface <|.. AstNode
	
	AstNodePropertyInterface <|.. AstNode
	
'	xtc.tree.Locatable <|.. AstNode
	
'	java.lang.Cloneable <|.. AstNode
	
'	java.io.Serializable <|.. AstNode
	
'	java.util.List <|.. AstNode
	
'	java.util.AbstractList <|-- AstNodeImpl
	
	AstNode <|.. AstNodeImpl
	
	AstInnerNode <|.. AstNodeList
	
	AstAbstractInnerNode <|-- AstNodeListImpl
	
	AstNodeList <|.. AstNodeListImpl
	
	AstLeafNodeImpl <|-- AstParserEntity
	
	AstLeafNode <|.. AstStringNode
	
	AstLeafNodeImpl <|-- AstStringNodeImpl
	
	AstStringNode <|.. AstStringNodeImpl
	
	AstStringNodeImpl <|-- AstText
	
end package
