/* 
 * This file is auto-generated.
 * DO NOT MODIFY MANUALLY!
 * 
 * Generated by AstNodeGenerator.
 * Last generated: 2012-09-26 11:07:49.
 */

package org.sweble.wikitext.parser.nodes;

import org.sweble.wikitext.parser.preprocessor.XmlElementType;

import de.fau.cs.osr.ptk.common.ast.AstNodePropertyIterator;
import de.fau.cs.osr.ptk.common.ast.NodeList;

/**
 * <h1>OnlyInclude</h1> <h2>Grammar</h2>
 */
public class OnlyInclude
		extends
			WtContentNode

{
	private static final long serialVersionUID = 1L;
	
	// =========================================================================
	
	public OnlyInclude()
	{
		super();
		
	}
	
	public OnlyInclude(NodeList content, XmlElementType elementType)
	{
		super(content);
		setElementType(elementType);
		
	}
	
	@Override
	public int getNodeType()
	{
		return org.sweble.wikitext.parser.AstNodeTypes.NT_ONLY_INCLUDE;
	}
	
	// =========================================================================
	// Properties
	
	private XmlElementType elementType;
	
	public final XmlElementType getElementType()
	{
		return this.elementType;
	}
	
	public final XmlElementType setElementType(XmlElementType elementType)
	{
		XmlElementType old = this.elementType;
		this.elementType = elementType;
		return old;
	}
	
	@Override
	public final int getPropertyCount()
	{
		return 1;
	}
	
	@Override
	public final AstNodePropertyIterator propertyIterator()
	{
		return new AstNodePropertyIterator()
		{
			@Override
			protected int getPropertyCount()
			{
				return 1;
			}
			
			@Override
			protected String getName(int index)
			{
				switch (index)
				{
					case 0:
						return "elementType";
						
					default:
						throw new IndexOutOfBoundsException();
				}
			}
			
			@Override
			protected Object getValue(int index)
			{
				switch (index)
				{
					case 0:
						return OnlyInclude.this.getElementType();
						
					default:
						throw new IndexOutOfBoundsException();
				}
			}
			
			@Override
			protected Object setValue(int index, Object value)
			{
				switch (index)
				{
					case 0:
						return OnlyInclude.this.setElementType((XmlElementType) value);
						
					default:
						throw new IndexOutOfBoundsException();
				}
			}
		};
	}
	
	// =========================================================================
	// Children
	
	// =========================================================================
	
}
