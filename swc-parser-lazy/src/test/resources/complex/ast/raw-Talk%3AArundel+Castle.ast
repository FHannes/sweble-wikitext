LazyParsedPage(
  Properties:
    {N} warnings = []

  [
    Paragraph([
      Template(
        Properties:
          RTD = RtData: [0] = "{{", [1], [2] = "}}"
          {N} precededByNewline = false

        [ Text("WikiProjectBannerShell") ]
        [
          TemplateArgument(
            Properties:
              RTD = RtData: [0] = "|", [1] = "=", [2]
              {N} hasName = true

            [ Text("1") ]
            [
              Text("\n")
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = true

                [ Text("WikiProject Sussex") ]
                [
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("class") ]
                    [ Text("start") ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("importance") ]
                    [ Text("Mid") ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("unref") ]
                    [ ]
                  )
                ]
              )
              Text("\n")
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = true

                [ Text("WikiProject Architecture") ]
                [
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("class") ]
                    [ Text("start") ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("importance") ]
                    [ Text("mid") ]
                  )
                ]
              )
              Text("\n")
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = true

                [ Text("WPMILHIST\n") ]
                [
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("class") ]
                    [
                      Text("start\n")
                      XmlComment(
                        Properties:
                          RTD = RtData: [0] = "<!-- B-Class checklist -->\n"
                          {N} content = " B-Class checklist "
                          {N} prefix = ""
                          {N} suffix = "\n"
                      )
                      XmlComment(
                        Properties:
                          RTD = RtData: [0] = "<!-- 1. It is suitably referenced, and all \nmajor points are appropriately cited. -->"
                          {N} content = " 1. It is suitably referenced, and all \nmajor points are appropriately cited. "
                          {N} prefix = null
                          {N} suffix = null
                      )
                      Text("\n")
                    ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("B-Class-1") ]
                    [
                      Text("no\n")
                      XmlComment(
                        Properties:
                          RTD = RtData: [0] = "<!-- 2. It reasonably covers the topic, and \ndoes not contain major omissions or inaccuracies. -->\n"
                          {N} content = " 2. It reasonably covers the topic, and \ndoes not contain major omissions or inaccuracies. "
                          {N} prefix = ""
                          {N} suffix = "\n"
                      )
                    ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("B-Class-2") ]
                    [
                      Text("\n")
                      XmlComment(
                        Properties:
                          RTD = RtData: [0] = "<!-- 3. It has a defined structure, including \na lead section and one or more sections of content. -->\n"
                          {N} content = " 3. It has a defined structure, including \na lead section and one or more sections of content. "
                          {N} prefix = ""
                          {N} suffix = "\n"
                      )
                    ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("B-Class-3") ]
                    [
                      Text("\n")
                      XmlComment(
                        Properties:
                          RTD = RtData: [0] = "<!-- 4. It is free from major grammatical errors. -->\n"
                          {N} content = " 4. It is free from major grammatical errors. "
                          {N} prefix = ""
                          {N} suffix = "\n"
                      )
                    ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("B-Class-4") ]
                    [
                      Text("\n")
                      XmlComment(
                        Properties:
                          RTD = RtData: [0] = "<!-- 5. It contains appropriate supporting materials, \nsuch as an infobox, images, or diagrams. -->\n"
                          {N} content = " 5. It contains appropriate supporting materials, \nsuch as an infobox, images, or diagrams. "
                          {N} prefix = ""
                          {N} suffix = "\n"
                      )
                    ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("B-Class-5") ]
                    [
                      Text("no infobox, no plan or map\n")
                      XmlComment(
                        Properties:
                          RTD = RtData: [0] = "<!-- Task force tags -->\n"
                          {N} content = " Task force tags "
                          {N} prefix = ""
                          {N} suffix = "\n"
                      )
                    ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("British-task-force") ]
                    [ Text("yes\n") ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("Fortifications-task-force") ]
                    [ Text("yes\n") ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("Medieval-task-force") ]
                    [ Text("yes\n") ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("Technology-task-force") ]
                    [ Text("yes") ]
                  )
                  TemplateArgument(
                    Properties:
                      RTD = RtData: [0] = "|", [1] = "=", [2]
                      {N} hasName = true

                    [ Text("Early-Modern-task-force") ]
                    [ Text("yes") ]
                  )
                ]
              )
              Text("\n")
            ]
          )
        ]
      )
    ])
    Newline("\n")
    Newline("\n")
    HorizontalRule(
      Properties:
        RTD = RtData: [0] = "----"
    )
    Newline("\n")
    Paragraph([
      Text("Okay, what's the problem? Zvesoulis put a ")
      TagExtension(
        Properties:
          RTD = RtData: [0] = "<nowiki", [1] = ">{{cleanup}}</nowiki>"
          {N} body = "{{cleanup}}"
          {N} name = "nowiki"

        [ ]
      )
      Text(" tag on the article, but I've read the thing through several times and don't see a problem warranting the tag. Moreover, this is the very first entry in the talk page which strikes me as meaning we have a ways to go before we start throwing tags around. I removed the tag and made a couple of other edits. If anyone has any thoughts on what needs to be ")
      Italics(
        Properties:
          RTD = RtData: [0] = "''", [1] = "''"

        [ Text("cleaned up") ]
      )
      Text(" please say something here and/or let me know. Thanks. ")
      InternalLink(
        Properties:
          RTD = RtData: [0] = "[[User:Duckecho", [1] = "]]"
          {N} postfix = ""
          {N} prefix = ""
          {N} target = "User:Duckecho"

        LinkTitle(
          Properties:
            RTD = RtData: [0] = "|", [1]

          [ Text("Duckecho") ]
        )
      )
      Text(" (")
      InternalLink(
        Properties:
          RTD = RtData: [0] = "[[User talk:Duckecho", [1] = "]]"
          {N} postfix = ""
          {N} prefix = ""
          {N} target = "User talk:Duckecho"

        LinkTitle(
          Properties:
            RTD = RtData: [0] = "|", [1]

          [ Text("Talk)") ]
        )
      )
      Text(" 7 July 2005 19:52 (UTC)")
    ])
    Newline("\n")
    Newline("\n")
    Paragraph([ Text("The history section states that the castle was first built in 1068 and that it was built during Edward the Confessor's reign.  Which is correct?") ])
    Newline("\n")
    Newline("\n")
    Section(
      Properties:
        RTD = RtData: [0] = "==", [1] = "==", [2]
        {N} level = 2

      [ Text(" Ghosts ") ]
      [
        Newline("\n")
        Paragraph([
          Text("What about the 4 ghosts living in the castle? there should be some reference  ")
          XmlElement(
            Properties:
              RTD = RtData: [0] = "<span", [1] = ">", [2] = "</span>"
              {N} empty = false
              {N} name = "span"

            [
              XmlAttribute(
                Properties:
                  RTD = RtData: [0] = " style=\"", [1] = "\""
                  {N} hasValue = true
                  {N} name = "style"

                [ Text("font-size: smaller;") ]
              )
              XmlAttribute(
                Properties:
                  RTD = RtData: [0] = " class=\"", [1] = "\""
                  {N} hasValue = true
                  {N} name = "class"

                [ Text("autosigned") ]
              )
            ]
            [
              Text("\u2014Preceding ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[Wikipedia:Signatures", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "Wikipedia:Signatures"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("unsigned") ]
                )
              )
              Text(" comment added by ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[Special:Contributions/88.17.252.156", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "Special:Contributions/88.17.252.156"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("88.17.252.156") ]
                )
              )
              Text(" (")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[User talk:88.17.252.156", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "User talk:88.17.252.156"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("talk") ]
                )
              )
              Text(") 00:33, 8 March 2010 (UTC)")
            ]
          )
          XmlComment(
            Properties:
              RTD = RtData: [0] = "<!-- Template:UnsignedIP -->"
              {N} content = " Template:UnsignedIP "
              {N} prefix = null
              {N} suffix = null
          )
          Text(" ")
          XmlComment(
            Properties:
              RTD = RtData: [0] = "<!--Autosigned by SineBot-->"
              {N} content = "Autosigned by SineBot"
              {N} prefix = null
              {N} suffix = null
          )
        ])
        Newline("\n")
        Newline("\n")
      ]
    )
    Section(
      Properties:
        RTD = RtData: [0] = "==", [1] = "==", [2]
        {N} level = 2

      [ Text(" Automated peer review ") ]
      [
        Newline("\n")
        Newline("\n")
        Paragraph([
          Template(
            Properties:
              RTD = RtData: [0] = "{{", [1], [2] = "}}"
              {N} precededByNewline = false

            [
              Text("#ifeq:")
              TemplateParameter(
                Properties:
                  RTD = RtData: [0] = "{{{", [1], [2], [3] = "}}}"
                  {N} precededByNewline = false

                [ Text("name") ]
              )
            ]
            [
              TemplateArgument(
                Properties:
                  RTD = RtData: [0] = "|", [1], [2]
                  {N} hasName = false

                [ ]
                [ Text("Arundel Castle") ]
              )
              TemplateArgument(
                Properties:
                  RTD = RtData: [0] = "|", [1], [2]
                  {N} hasName = false

                [ ]
                [ Text("[[User:MortimerCat|MortimerCat]] ([[User talk:MortimerCat|talk]]) 00:02, 14 April 2008 (UTC)") ]
              )
            ]
          )
          Text("The following suggestions were generated by a semi-automatic ")
          InternalLink(
            Properties:
              RTD = RtData: [0] = "[[User:AndyZ/peerreviewer", [1] = "]]"
              {N} postfix = ""
              {N} prefix = ""
              {N} target = "User:AndyZ/peerreviewer"

            LinkTitle(
              Properties:
                RTD = RtData: [0] = "|", [1]

              [ Text("javascript program") ]
            )
          )
          Text(", and might not be applicable for the article in question.")
        ])
        Newline("\n")
        Itemization([
          ItemizationItem(
            Properties:
              RTD = RtData: [0] = "*", [1] = "\n"

            [
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = false

                [ Text("Done") ]
                [ ]
              )
              Text("  Per ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[Wikipedia:Only make links that are relevant to the context", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "Wikipedia:Only make links that are relevant to the context"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("Wikipedia:Context") ]
                )
              )
              Text(" and ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[Wikipedia:Manual of Style (dates and numbers)", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "Wikipedia:Manual of Style (dates and numbers)"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("Wikipedia:Manual of Style (dates)") ]
                )
              )
              Text(", months and days of the week generally should not be linked. Years, decades, and centuries can be linked if they provide ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[WP:CONTEXT", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "WP:CONTEXT"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("context") ]
                )
              )
              Text(" for the article.")
              XmlElement(
                Properties:
                  RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                  {N} empty = false
                  {N} name = "sup"

                [ ]
                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[User:AndyZ/G#contxt", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "User:AndyZ/G#contxt"

                    LinkTitle(
                      Properties:
                        RTD = RtData: [0] = "|", [1]

                      [ Text("[?") ]
                    )
                  )
                  Text("]")
                ]
              )
            ]
          )
          ItemizationItem(
            Properties:
              RTD = RtData: [0] = "*", [1] = "\n"

            [
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = false

                [ Text("Not done") ]
                [ ]
              )
              Text("  Per ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[Wikipedia:What is a featured article?", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "Wikipedia:What is a featured article?"

                LinkTitle([ ])
              )
              Text(", ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[WP:IMAGE", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "WP:IMAGE"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("Images") ]
                )
              )
              Text(" should have concise captions.")
              XmlElement(
                Properties:
                  RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                  {N} empty = false
                  {N} name = "sup"

                [ ]
                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[User:AndyZ/G#caption", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "User:AndyZ/G#caption"

                    LinkTitle(
                      Properties:
                        RTD = RtData: [0] = "|", [1]

                      [ Text("[?") ]
                    )
                  )
                  Text("]")
                ]
              )
            ]
          )
          ItemizationItem(
            Properties:
              RTD = RtData: [0] = "*", [1] = "\n"

            [
              Bold(
                Properties:
                  RTD = RtData: [0] = "'''", [1] = "'''"

                [ Text("NA") ]
              )
              Text("  You may wish to consider adding an appropriate ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[WP:INFOBOX", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "WP:INFOBOX"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("infobox") ]
                )
              )
              Text(" for this article, if one exists relating to the topic of the article. ")
              XmlElement(
                Properties:
                  RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                  {N} empty = false
                  {N} name = "sup"

                [ ]
                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[User:AndyZ/G#infobox", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "User:AndyZ/G#infobox"

                    LinkTitle(
                      Properties:
                        RTD = RtData: [0] = "|", [1]

                      [ Text("[?") ]
                    )
                  )
                  Text("]")
                ]
              )
              Text(" (Note that there might not be an applicable infobox; remember that these suggestions are not generated manually)")
            ]
          )
          ItemizationItem(
            Properties:
              RTD = RtData: [0] = "*", [1] = "\n"

            [
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = false

                [ Text("Done") ]
                [ ]
              )
              Text("  As per ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[Wikipedia:Manual of Style (dates and numbers)", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "Wikipedia:Manual of Style (dates and numbers)"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("Wikipedia:Manual of Style (dates)") ]
                )
              )
              Text(", dates shouldn't use ")
              XmlElement(
                Properties:
                  RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                  {N} empty = false
                  {N} name = "sup"

                [ ]
                [ Text("th") ]
              )
              Text("; for example, instead of (if such appeared in the article) using ")
              Italics(
                Properties:
                  RTD = RtData: [0] = "''", [1] = "''"

                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[January 30", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "January 30"

                    LinkTitle(
                      Properties:
                        RTD = RtData: [0] = "|", [1]

                      [
                        Text("January 30")
                        XmlElement(
                          Properties:
                            RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                            {N} empty = false
                            {N} name = "sup"

                          [ ]
                          [ Text("th") ]
                        )
                      ]
                    )
                  )
                  Text(" was a great day")
                ]
              )
              Text(", use ")
              Italics(
                Properties:
                  RTD = RtData: [0] = "''", [1] = "''"

                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[January 30", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "January 30"

                    LinkTitle([ ])
                  )
                  Text(" was a great day")
                ]
              )
              Text(".")
              XmlElement(
                Properties:
                  RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                  {N} empty = false
                  {N} name = "sup"

                [ ]
                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[User:AndyZ/G#dateth", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "User:AndyZ/G#dateth"

                    LinkTitle(
                      Properties:
                        RTD = RtData: [0] = "|", [1]

                      [ Text("[?") ]
                    )
                  )
                  Text("]")
                ]
              )
            ]
          )
          ItemizationItem(
            Properties:
              RTD = RtData: [0] = "*", [1] = "\n"

            [
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = false

                [ Text("Done") ]
                [ ]
              )
              Text("  Per ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[Wikipedia:Manual of Style (headings)", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "Wikipedia:Manual of Style (headings)"

                LinkTitle([ ])
              )
              Text(", headings generally do not start with articles ('the', 'a(n)'). For example, if there was a section called ")
              Italics(
                Properties:
                  RTD = RtData: [0] = "''", [1] = "''"

                [
                  TagExtension(
                    Properties:
                      RTD = RtData: [0] = "<nowiki", [1] = ">==The Biography==</nowiki>"
                      {N} body = "==The Biography=="
                      {N} name = "nowiki"

                    [ ]
                  )
                ]
              )
              Text(", it should be changed to ")
              Italics(
                Properties:
                  RTD = RtData: [0] = "''", [1] = "''"

                [
                  TagExtension(
                    Properties:
                      RTD = RtData: [0] = "<nowiki", [1] = ">==Biography==</nowiki>"
                      {N} body = "==Biography=="
                      {N} name = "nowiki"

                    [ ]
                  )
                ]
              )
              Text(".")
              XmlElement(
                Properties:
                  RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                  {N} empty = false
                  {N} name = "sup"

                [ ]
                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[User:AndyZ/G#headingthe", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "User:AndyZ/G#headingthe"

                    LinkTitle(
                      Properties:
                        RTD = RtData: [0] = "|", [1]

                      [ Text("[?") ]
                    )
                  )
                  Text("]")
                ]
              )
            ]
          )
          ItemizationItem(
            Properties:
              RTD = RtData: [0] = "*", [1] = "\n"

            [
              Template(
                Properties:
                  RTD = RtData: [0] = "{{", [1], [2] = "}}"
                  {N} precededByNewline = false

                [ Text("Not done") ]
                [ ]
              )
              Text("  Watch for ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[User:Tony1/How_to_satisfy_Criterion_2a#Redundancy", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "User:Tony1/How_to_satisfy_Criterion_2a#Redundancy"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("redundancies") ]
                )
              )
              Text(" that make the article too wordy instead of being crisp and concise. (You may wish to try Tony1's ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[User:Tony1/How to satisfy Criterion 1a: redundancy exercises", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "User:Tony1/How to satisfy Criterion 1a: redundancy exercises"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("redundancy exercises") ]
                )
              )
              Text(".)")
              Itemization([
                ItemizationItem(
                  Properties:
                    RTD = RtData: [0] = "**", [1] = "\n"

                  [
                    Text("Vague terms of size often are unnecessary and redundant -  \u201Csome\u201D, \u201Ca variety/number/majority of\u201D, \u201Cseveral\u201D, \u201Ca few\u201D, \u201Cmany\u201D, \u201Cany\u201D, and \u201Call\u201D. For example, \u201C")
                    XmlElement(
                      Properties:
                        RTD = RtData: [0] = "<font", [1] = ">", [2] = "</font>"
                        {N} empty = false
                        {N} name = "font"

                      [
                        XmlAttribute(
                          Properties:
                            RTD = RtData: [0] = " color='", [1] = "'"
                            {N} hasValue = true
                            {N} name = "color"

                          [ Text("red") ]
                        )
                      ]
                      [
                        XmlElement(
                          Properties:
                            RTD = RtData: [0] = "<s", [1] = ">", [2] = "</s>"
                            {N} empty = false
                            {N} name = "s"

                          [ ]
                          [ Text("All") ]
                        )
                      ]
                    )
                    Text(" pigs are pink, so we thought of ")
                    XmlElement(
                      Properties:
                        RTD = RtData: [0] = "<font", [1] = ">", [2] = "</font>"
                        {N} empty = false
                        {N} name = "font"

                      [
                        XmlAttribute(
                          Properties:
                            RTD = RtData: [0] = " color='", [1] = "'"
                            {N} hasValue = true
                            {N} name = "color"

                          [ Text("red") ]
                        )
                      ]
                      [
                        XmlElement(
                          Properties:
                            RTD = RtData: [0] = "<s", [1] = ">", [2] = "</s>"
                            {N} empty = false
                            {N} name = "s"

                          [ ]
                          [ Text("a number of") ]
                        )
                      ]
                    )
                    Text(" ways to turn them green.\u201D")
                  ]
                )
                ItemizationItem(
                  Properties:
                    RTD = RtData: [0] = "**", [1] = "\n"

                  [
                    Text("\u201CIn ")
                    XmlElement(
                      Properties:
                        RTD = RtData: [0] = "<font", [1] = ">", [2] = "</font>"
                        {N} empty = false
                        {N} name = "font"

                      [
                        XmlAttribute(
                          Properties:
                            RTD = RtData: [0] = " color='", [1] = "'"
                            {N} hasValue = true
                            {N} name = "color"

                          [ Text("red") ]
                        )
                      ]
                      [
                        XmlElement(
                          Properties:
                            RTD = RtData: [0] = "<s", [1] = ">", [2] = "</s>"
                            {N} empty = false
                            {N} name = "s"

                          [ ]
                          [
                            Text(
                              Properties:
                                {N} content = "the year [of]"
                                warnings = 
                                [
                                  Warning (none): /complex/wikitext/raw-Talk%3AArundel+Castle.wikitext:21:37 - 38: "[" : This looks like a External Link, however the actual URL is missing.
                                ]
                            )
                          ]
                        )
                      ]
                    )
                    Text(" 1138\u201D")
                  ]
                )
              ])
            ]
          )
          ItemizationItem(
            Properties:
              RTD = RtData: [0] = "*", [1]

            [
              Text("Please ensure that the article has gone through a thorough copyediting so that it exemplifies some of ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[WP:WIAFA", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "WP:WIAFA"

                LinkTitle(
                  Properties:
                    RTD = RtData: [0] = "|", [1]

                  [ Text("Wikipedia's best work") ]
                )
              )
              Text(". See also ")
              InternalLink(
                Properties:
                  RTD = RtData: [0] = "[[User:Tony1/How to satisfy Criterion 1a", [1] = "]]"
                  {N} postfix = ""
                  {N} prefix = ""
                  {N} target = "User:Tony1/How to satisfy Criterion 1a"

                LinkTitle([ ])
              )
              Text(".")
              XmlElement(
                Properties:
                  RTD = RtData: [0] = "<sup", [1] = ">", [2] = "</sup>"
                  {N} empty = false
                  {N} name = "sup"

                [ ]
                [
                  InternalLink(
                    Properties:
                      RTD = RtData: [0] = "[[User:AndyZ/G#copyedit", [1] = "]]"
                      {N} postfix = ""
                      {N} prefix = ""
                      {N} target = "User:AndyZ/G#copyedit"

                    LinkTitle(
                      Properties:
                        RTD = RtData: [0] = "|", [1]

                      [ Text("[?") ]
                    )
                  )
                  Text("]")
                ]
              )
            ]
          )
        ])
        Newline("\n")
        Paragraph([
          Text("You may wish to browse through ")
          InternalLink(
            Properties:
              RTD = RtData: [0] = "[[User:AndyZ/Suggestions", [1] = "]]"
              {N} postfix = ""
              {N} prefix = ""
              {N} target = "User:AndyZ/Suggestions"

            LinkTitle([ ])
          )
          Text(" for further ideas. Thanks, ")
          InternalLink(
            Properties:
              RTD = RtData: [0] = "[[User:MortimerCat", [1] = "]]"
              {N} postfix = ""
              {N} prefix = ""
              {N} target = "User:MortimerCat"

            LinkTitle(
              Properties:
                RTD = RtData: [0] = "|", [1]

              [ Text("MortimerCat") ]
            )
          )
          Text(" (")
          InternalLink(
            Properties:
              RTD = RtData: [0] = "[[User talk:MortimerCat", [1] = "]]"
              {N} postfix = ""
              {N} prefix = ""
              {N} target = "User talk:MortimerCat"

            LinkTitle(
              Properties:
                RTD = RtData: [0] = "|", [1]

              [ Text("talk") ]
            )
          )
          Text(") 00:02, 14 April 2008 (UTC)")
        ])
        Newline("\n")
      ]
    )
  ]
)
